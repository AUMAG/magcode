
clear all

displ = [0.02 0.02 0.02];

% Test against Halbach array with four magnets per wavelength

fixed_array = struct(...
        'type','linear', ...
        'align','x', ...
        'face','up', ...
        'length', 0.05, ...
        'width',  0.01, ...
        'height', 0.01, ...
        'Nmag_per_wave', 4, ...
        'Nwaves', 1 ...
  );

float_array = fixed_array;
float_array.face = 'down';

f1 = multipoleforces(fixed_array, float_array, displ);

fixed_array = struct(...
        'type','linear-quasi', ...
        'align','x', ...
        'face','up', ...
        'length', 0.05, ...
        'width',  0.01, ...
        'height', 0.01, ...
        'Nwaves', 1, ...
        'ratio', 1 ...
  );

float_array = fixed_array;
float_array.face = 'down';

f2 = multipoleforces(fixed_array, float_array, displ);

assert( all(chop(f1,6)==chop(f2,6)) , ...
  'linear (4mag) and linear-quasi should be equivalent');

% Test against Halbach array with two magnets per wavelength

fixed_array = struct(...
        'type','linear', ...
        'align','x', ...
        'face','up', ...
        'length', 0.03, ...
        'width',  0.01, ...
        'height', 0.01, ...
        'Nmag_per_wave', 2, ...
        'Nwaves', 1 ...
  );

float_array = fixed_array;
float_array.face = 'down';

f3 = multipoleforces(fixed_array, float_array, displ);

fixed_array = struct(...
        'type','linear-quasi', ...
        'align','x', ...
        'face','up', ...
        'length', 0.03, ...
        'width',  0.01, ...
        'height', 0.01, ...
        'Nwaves', 1, ...
        'ratio', 0 ...
  );

float_array = fixed_array;
float_array.face = 'down';

f4 = multipoleforces(fixed_array, float_array, displ);

assert( all(chop(f3,6)==chop(f4,6)) , ...
  'linear (2mag) and linear-quasi should be equivalent');


